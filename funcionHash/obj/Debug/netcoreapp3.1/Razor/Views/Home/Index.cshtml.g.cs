#pragma checksum "C:\Users\hikdu\source\repos\EJ Asp netCore 3.x\funcionHash\funcionHash\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "88cb58726a1648de63884ee31323c59bae8af923"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\hikdu\source\repos\EJ Asp netCore 3.x\funcionHash\funcionHash\Views\_ViewImports.cshtml"
using funcionHash;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hikdu\source\repos\EJ Asp netCore 3.x\funcionHash\funcionHash\Views\_ViewImports.cshtml"
using funcionHash.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"88cb58726a1648de63884ee31323c59bae8af923", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"97d098c95c4e32962f74d066c9068719dd00a6fa", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\hikdu\source\repos\EJ Asp netCore 3.x\funcionHash\funcionHash\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    string btnName = "Enc/Des";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1>Funcion Hash</h1>    
</div>


<div class=""container"" style=""margin:50px;"">
    <div class=""row"">
        <div class=""col-6"">
            <label for=""valor"">valor a hasshear</label>
            <input id=""valor"" name=""valor"" type=""password"" />
            <input type=""button"" id=""btn"" value=""Codificar"">
        </div>
        <div class=""col-6"">
            <label for=""compare"">valor a comparar</label>
            <input id=""compare"" name=""compare"" type=""password"" />
            <input type=""button"" id=""btnConpare"" value=""Comparar"">

        </div>

    </div>
    <div class=""row"">
        <div class=""col-12 align-self-lg-center"" >

            <label for=""valorHash"">valor Codificado</label>
            <input id=""respuesta"" name=""valorHash"" type=""text"" maxlength=""50000"" disabled />
            <p id=""baba""> ---- #### --- </p>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12 align-self-lg-center"">

            <label ");
            WriteLiteral(@"for=""valorin"">ingrese valor a encriptar</label>
            <input id=""valorIn"" name=""valorin"" type=""text"" maxlength=""50000"" />
            <label for=""valorCrip""> valor encriptado || en database</label>
            <input id=""valorCrip"" name=""valorCrip"" type=""text"" maxlength=""50000"" disabled />


        </div>

        <div class=""col-12 align-self-lg-center"">
            <label for=""valorOut"">valor desencriptado || al salir de database</label>
            <input id=""valorOut"" name=""valorout"" type=""text"" maxlength=""50000"" disabled />
        </div>
        <div class=""col-12 align-self-lg-center"">
            <button id=""btnCrip"">");
#nullable restore
#line 50 "C:\Users\hikdu\source\repos\EJ Asp netCore 3.x\funcionHash\funcionHash\Views\Home\Index.cshtml"
                            Write(btnName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\r\n\r\n");
            WriteLiteral("        </div>\r\n        </div>\r\n    </div>\r\n\r\n<script>\r\n\r\n");
            WriteLiteral(@"        const btnCrip = document.getElementById('btnCrip');
    const btnDC = document.getElementById('btnDCrip');



    btnCrip.addEventListener('click', () => {

        

            let original = document.getElementById(""valorIn"");
            let valorHash = document.getElementById(""valorCrip"");
            let valorDesE = document.getElementById(""valorOut"");

            if (origin.value === """")
                alert(""ingrese un valor"");

            $.get(""Home/Encriptar/?Cadena="" + original.value, data => {
                valorHash.value = data;
");
            WriteLiteral("            });\r\n            $.get(\"Home/Desencriptar/?Cadena=\" + valorHash.value, data => {\r\n                valorDesE.value = data;\r\n");
            WriteLiteral("            });\r\n\r\n");
            WriteLiteral(@"
        });



        /// ####################################

        const btn = document.getElementById('btn');

        const btnCompare = document.getElementById('btnConpare');

        btn.addEventListener('click', () => {

            const respuesta = document.getElementById('respuesta');
            const valor = document.getElementById('valor').value;

            $.get(""Home/pruebaHash/?valor="" + valor, data => {

                respuesta.value = data;
            })
        })


        btnCompare.addEventListener('click', () => {
            const valorCodificado = document.getElementById('respuesta').value;
            const valorSincodificar = document.getElementById('compare').value;
            const resp = document.getElementById('baba');

            $.get(""Home/comparar/?valorCifrado="" + valorCodificado + ""&valornuevo="" + valorSincodificar, respuesta => {
                if (respuesta) {
                    resp.innerHTML = ""<p style='background: forestgre");
            WriteLiteral("en; color: aliceblue;\'> valores iguales </p>\";\r\n                } else {\r\n                    resp.innerHTML = \"<p style=\'background: red; color: aliceblue;\'> valores diferentes </p>\"\r\n                }\r\n            })\r\n\r\n        })\r\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
